# name: Build and Deploy to AWS

# on:
#   push:
#     branches: [ "main" ]

# env:
#   IMAGE_NAME: ram1979/cicd-test-v.2   # Format: <dockerhub_account>/<repo>  
#   IMAGE_TAG: ${{ github.sha }}

# jobs:
#   build-and-publish-docker-image:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Git repository
#         uses: actions/checkout@v3
        
#       - name: Build and tag Docker image
#         run: docker build -t ram1979/cicd-test-v.2:$IMAGE_TAG -t ram1979/cicd-test-v.2:latest .
      
#       - name: Login to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
#       - name: Publish Docker image to Docker Hub
#         run: |
#           docker push $IMAGE_NAME:$IMAGE_TAG
#           docker push $IMAGE_NAME:latest

#   deploy-docker-image:
#     runs-on: ubuntu-latest
#     needs: [build-and-publish-docker-image]  # requires successful completion
#     steps:
#       - name: Set up SSH connection to AWS remote server
#         env:
#           SSH_HOST: ${{ secrets.SSH_HOST }}
#           SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
#           SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#         run: |
#           mkdir ~/.ssh/
#           echo "${SSH_KEY}" > ~/.ssh/key.pem
#           chmod 400 ~/.ssh/key.pem
#           cat >> ~/.ssh/config << END
#           Host remote_host
#           HostName ${SSH_HOST}
#           User ${SSH_USERNAME}
#           IdentityFile ~/.ssh/key.pem
#           StrictHostKeyChecking no
#           END
      
#       - name: Deploy Docker container on AWS via SSH
#         run: |  # Pre-requisite: docker has been installed on the remote machine
#           ssh remote_host "docker ps -a"                         # remote_host as defined in ~/.ssh/config
#           ssh remote_host "docker ps -q | xargs -r docker stop"  # stops any running container
#           ssh remote_host "docker pull ${IMAGE_NAME}"
#           ssh remote_host "docker run -d -p 80:80 ${IMAGE_NAME}:latest"

name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up SSH Connection
        uses: appleboy/ssh-action@v2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22

      - name: Run Commands on EC2
        run: |
          # You can run your commands here.
          ssh ec2-user@18.141.142.11 "your-command-here"

